{"ast":null,"code":"import _classCallCheck from \"/Users/nichw/Documents/quizlet-rpg/mvwars/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nichw/Documents/quizlet-rpg/mvwars/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nichw/Documents/quizlet-rpg/mvwars/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nichw/Documents/quizlet-rpg/mvwars/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nichw/Documents/quizlet-rpg/mvwars/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/nichw/Documents/quizlet-rpg/mvwars/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/nichw/Documents/quizlet-rpg/mvwars/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './style.css';\nimport Controls from \"./Controls.js\";\n\nvar monster1 = require(\"./images/monster1.png\");\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      intro: false,\n      monster: {},\n      URL: 'https://quizlet.com/296829048/repaso-del-subjuntivo-2-crs-palabras-indefinidas-csi-flash-cards/',\n      quizletSet: require(\"./dummyQuizlet\").default,\n      monsterHP: 20,\n      monsterAT: 20,\n      questionObject: {\n        correctIndex: 0,\n        buttons: [\"s\", \"s\", \"s\", \"s\"]\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.generateQuestion = _this.generateQuestion.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.shuffleArray = _this.shuffleArray.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.generateMonster = _this.generateMonster.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.generateQuestion();\n\n    _this.generateMonster();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    }\n  }, {\n    key: \"generateMonster\",\n    value: function generateMonster() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/monsters').then(function (data) {\n        _this2.setState({\n          monster: data.data,\n          monsterHP: data.data.hp,\n          monsterAT: data.data.at\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"generateQuestion\",\n    value: function generateQuestion() {\n      var index = Math.floor(Math.random() * this.state.quizletSet.length - 1);\n      var answer = this.state.quizletSet[index].definition + \"!answer!\";\n      var wronganswer1 = this.state.quizletSet[Math.floor(Math.random() * this.state.quizletSet.length - 1)].definition;\n      var wronganswer2 = this.state.quizletSet[Math.floor(Math.random() * this.state.quizletSet.length - 1)].definition;\n      var wronganswer3 = this.state.quizletSet[Math.floor(Math.random() * this.state.quizletSet.length - 1)].definition;\n      var answers = [answer, wronganswer1, wronganswer2, wronganswer3];\n      this.shuffleArray(answers);\n      console.log(answers);\n      this.setState({\n        questionObject: {\n          correctIndex: index,\n          buttons: answer\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      //your write request axios.write(blah blah blah)\n      //have it log to console, then check dev tools to see if it worked\n      //nothing will show up in UI, this is just for you to test server, don't commit to main branch\n      axios.get('http://localhost:5000/monsters').then(function (data) {\n        _this3.setState({\n          monster: data.data\n        });\n\n        console.log(_this3.state.monster);\n      }).catch(function (error) {\n        console.log(error);\n      }); //axios get request for quizlet set, set quizletSet to what backend returns\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        URL: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this4 = this;\n\n      alert('A name was submitted: ' + this.state.URL);\n      event.preventDefault();\n      this.setState({\n        intro: false\n      }); //get quizlet from user\n\n      axios.get('http://localhost:5000/quizlet?url=' + this.state.URL).then(function (data) {\n        _this4.setState({\n          quizletSet: data.data\n        });\n\n        console.log(data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.intro ? React.createElement(\"div\", {\n        className: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Enter the Quizlet URL :\"), React.createElement(\"div\", {\n        className: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.URL,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleSubmit,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Submit\"))) : React.createElement(\"div\", {\n        className: \"combat-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"monster-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"image\",\n        src: monster1,\n        height: \"300\",\n        width: \"300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"monster-stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.state.monster.name), React.createElement(\"div\", {\n        className: \"monster-hp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"HP: \", this.state.monsterHP), React.createElement(\"div\", {\n        className: \"monster-at\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"AT: \", this.state.monsterAT)), React.createElement(\"div\", {\n        className: \"flavor-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"This is where the flavor text goes\")), React.createElement(\"div\", {\n        className: \"question-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Controls, {\n        qObject: this.state.questionObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/nichw/Documents/quizlet-rpg/mvwars/src/App.js"],"names":["React","Component","axios","Controls","monster1","require","App","props","state","intro","monster","URL","quizletSet","default","monsterHP","monsterAT","questionObject","correctIndex","buttons","handleChange","bind","handleSubmit","generateQuestion","shuffleArray","generateMonster","array","i","length","j","Math","floor","random","temp","get","then","data","setState","hp","at","catch","error","console","log","index","answer","definition","wronganswer1","wronganswer2","wronganswer3","answers","event","target","value","alert","preventDefault","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport './style.css';\nimport Controls from \"./Controls.js\"\n\nvar monster1 = require(\"./images/monster1.png\");\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      intro: false,\n      monster: {},\n      URL: 'https://quizlet.com/296829048/repaso-del-subjuntivo-2-crs-palabras-indefinidas-csi-flash-cards/',\n      quizletSet: require(\"./dummyQuizlet\").default,\n      monsterHP: 20,\n      monsterAT: 20,\n      questionObject: {\n        correctIndex: 0,\n        buttons: [\"s\",\"s\",\"s\",\"s\"]\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.generateQuestion = this.generateQuestion.bind(this);\n    this.shuffleArray = this.shuffleArray.bind(this);\n    this.generateMonster= this.generateMonster.bind(this);\n    this.generateQuestion();\n    this.generateMonster();\n  }\n  shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\n  generateMonster(){\n    axios.get('http://localhost:5000/monsters')\n    .then(data => {\n      this.setState({monster: data.data,\n      monsterHP: data.data.hp,\n      monsterAT: data.data.at,});\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n  generateQuestion()\n  {\n    let index = Math.floor(Math.random() * this.state.quizletSet.length-1);\n    let answer = this.state.quizletSet[index].definition + \"!answer!\";\n    let wronganswer1 = this.state.quizletSet[Math.floor(Math.random() * this.state.quizletSet.length-1)].definition;\n    let wronganswer2 = this.state.quizletSet[Math.floor(Math.random() * this.state.quizletSet.length-1)].definition;\n    let wronganswer3 = this.state.quizletSet[Math.floor(Math.random() * this.state.quizletSet.length-1)].definition;\n    let answers = [answer,wronganswer1,wronganswer2,wronganswer3];\n    this.shuffleArray(answers);\n    console.log(answers);\n    this.setState({\n      questionObject: {\n        correctIndex: index,\n        buttons: answer\n      }\n      })\n  }\n  componentDidMount() {\n    //your write request axios.write(blah blah blah)\n    //have it log to console, then check dev tools to see if it worked\n    //nothing will show up in UI, this is just for you to test server, don't commit to main branch\n\n    axios.get('http://localhost:5000/monsters')\n    .then(data => {\n      this.setState({monster: data.data});\n      console.log(this.state.monster);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n    //axios get request for quizlet set, set quizletSet to what backend returns\n\n  }\n  handleChange(event) {\n    this.setState({ URL: event.target.value });\n  }\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.URL);\n    event.preventDefault();\n    this.setState({ intro: false })\n    //get quizlet from user\n    axios.get('http://localhost:5000/quizlet?url='+this.state.URL)\n    .then(data => {\n      this.setState({quizletSet: data.data,});\n      console.log(data);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n  render() {\n    return (\n      <div className=\"app-container\">\n        {this.state.intro ?\n          <div className=\"form-container\">\n            <label>\n              Enter the Quizlet URL :\n            </label>\n            <div className=\"input\">\n              <input type=\"text\" value={this.state.URL} onChange={this.handleChange} />\n            </div>\n            <div className=\"button\">\n              <button type=\"submit\" onClick={this.handleSubmit} className=\"btn btn-primary\">Submit</button>\n            </div>\n          </div>\n          :\n          <div className=\"combat-container\">\n            <div className=\"monster-container\">\n              <div><img className='image' src={monster1} height=\"300\" width=\"300\" /></div>\n              <div className=\"monster-stats\">\n                <div className='name'>{this.state.monster.name}</div>\n                <div className='monster-hp'>HP: {this.state.monsterHP}</div>\n                <div className='monster-at'>AT: {this.state.monsterAT}</div>\n              </div>\n              <div className='flavor-text'>This is where the flavor text goes</div>\n            </div>\n            <div className=\"question-container\">\n              <Controls qObject = {this.state.questionObject}/>\n            </div>\n          </div>}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}